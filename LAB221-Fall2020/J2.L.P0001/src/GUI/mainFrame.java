/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;

/**
 *
 * @author truon
 */
public class mainFrame extends javax.swing.JDialog {

    /**
     * Creates new form mainFrame
     */
    loginForm loginFormm;
    SupplierPanel sp;
    ItemPanel ip;

    public mainFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Manager");
        this.setLocationRelativeTo(null);
        if (!parent.isActive()) {
            JOptionPane.showMessageDialog(null, "Please, login ");
            System.exit(0);
        } else {
            loginFormm = (loginForm) parent;
            welcome.setText("Welcome " + loginFormm.name + " comback");
            loginFormm.setVisible(false);
            sp = new SupplierPanel();
            ip = new ItemPanel();
            MyTab.add("Supplier", sp);
            MyTab.add("Item", ip);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcome = new javax.swing.JLabel();
        MyTab = new javax.swing.JTabbedPane();
        btnLogOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        welcome.setText("jLabel1");

        MyTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MyTabStateChanged(evt);
            }
        });

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MyTab, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MyTab, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        if (!sp.checkUpdateStatus() || sp.addNew || !ip.checkUpdateStatus() || ip.addNew) {
            int ans = JOptionPane.showConfirmDialog(null, "Do you want to save changes?", "ITEMS MANAGER", JOptionPane.YES_NO_CANCEL_OPTION);
            if (ans == JOptionPane.YES_OPTION) {
                if (!sp.checkUpdateStatus()) {
                    if (sp.updateDataLogout()) {
                        return;
                    } else {
                        sp.updateData();
                    }
                } else if (sp.addNew) {
                    if (sp.saveNewLogout()) {
                        return;
                    } else {
                        sp.saveNew();
                    }

                } else if (!ip.checkUpdateStatus()) {
                    if (ip.updateLogin()) {
                        return;
                    } else {
                        ip.update();
                    }
                } else if (ip.addNew) {
                    if (ip.saveNewLogin()) {
                        return;
                    } else {
                        ip.saveNew();
                    }
                }
                loginFormm.name = "";
                loginFormm.setVisible(true);
                this.dispose();
            } else if (ans == JOptionPane.NO_OPTION) {
                loginFormm.name = "";
                loginFormm.setVisible(true);
                this.dispose();
            }
        } else {
            loginFormm.name = "";
            loginFormm.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:        
        if (!sp.checkUpdateStatus() || sp.addNew || !ip.checkUpdateStatus() || ip.addNew) {
            int ans = JOptionPane.showConfirmDialog(null, "Do you want to save changes?", "ITEMS MANAGER", JOptionPane.YES_NO_CANCEL_OPTION);
            if (ans == JOptionPane.YES_OPTION) {
                if (!sp.checkUpdateStatus()) {
                    if (sp.updateDataLogout()) {
                        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                    } else {
                        sp.updateData();
                        System.exit(0);
                    }
                } else if (sp.addNew) {
                    if (sp.saveNewLogout()) {
                        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                    } else {
                        sp.saveNew();
                        System.exit(0);
                    }

                } else if (!ip.checkUpdateStatus()) {
                    if (ip.updateLogin()) {
                        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                    } else {
                        ip.update();
                        System.exit(0);
                    }
                } else if (ip.addNew) {
                    if (ip.saveNewLogin()) {
                        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                    } else {
                        ip.saveNew();
                        System.exit(0);
                    }
                }
            } else if (ans == JOptionPane.CANCEL_OPTION) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            } else if (ans == JOptionPane.NO_OPTION) {
                sp.resetStatus();
                ip.resetStatuss();
                System.exit(0);
            }
        } else {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void MyTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MyTabStateChanged
        // TODO add your handling code here:
        if (evt.getSource() instanceof JTabbedPane) {
            JTabbedPane pane = (JTabbedPane) evt.getSource();
            int sel = pane.getSelectedIndex();
//            System.out.println(sel);
            if (sel == 1) {
//                System.out.println(ip.addNew);
                if (!ip.addNew) {
                    ip.loadItemPanell();
                    if (!sp.checkUpdateStatus() || sp.addNew) {
                        int ans = JOptionPane.showConfirmDialog(null, "Do you want to save changes?", "MANAGER", JOptionPane.YES_NO_OPTION);
                        if (ans == JOptionPane.YES_OPTION) {
                            if (!sp.checkUpdateStatus()) {
                                sp.updateData();
                                ip.loadItemPanell();
                            } else if (sp.addNew) {
                                sp.saveNew();
                                ip.loadItemPanell();
                            }
                        } else if (ans == JOptionPane.NO_OPTION) {
                            sp.resetStatus();
                            ip.resetStatuss();
                            sp.mainCheck2();
                        }
                    }
                }

            } else if (sel == 0) {
                if (!ip.checkUpdateStatus() || ip.addNew) {
                    int ans = JOptionPane.showConfirmDialog(null, "Do you want to save changes?", "MANAGER", JOptionPane.YES_NO_OPTION);
                    if (ans == JOptionPane.YES_OPTION) {
                        if (!ip.checkUpdateStatus()) {
                            ip.update();
                        } else if (ip.addNew) {
                            ip.saveNew();
                        }
                    } else if (ans == JOptionPane.NO_OPTION) {
                        sp.resetStatus();
                        ip.resetStatuss();
                        ip.mainCheck1();
                    }
                }
            }

        }
    }//GEN-LAST:event_MyTabStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mainFrame dialog = new mainFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane MyTab;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
}
